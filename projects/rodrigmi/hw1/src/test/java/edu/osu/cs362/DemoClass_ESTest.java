/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 18 03:16:18 GMT 2017
 */

package edu.osu.cs362;

import org.junit.Test;
import static org.junit.Assert.*;
//import static org.evosuite.runtime.EvoAssertions.*;
import edu.osu.cs362.DemoClass;
//import org.evosuite.runtime.EvoRunner;
//import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

//@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DemoClass_ESTest {

  //Test case number: 1
  /*
   * 14 covered goals:
   * Goal 1. edu.osu.cs362.DemoClass.overload(C)V: root-Branch
   * Goal 2. edu.osu.cs362.DemoClass.<init>()V: root-Branch
   * Goal 3. Branch edu.osu.cs362.DemoClass.<init>()V: root-Branch in context: edu.osu.cs362.DemoClass:<init>()V
   * Goal 4. Branch edu.osu.cs362.DemoClass.overload(C)V: root-Branch in context: edu.osu.cs362.DemoClass:overload(C)V
   * Goal 5. edu.osu.cs362.DemoClass.<init>()V: Line 17
   * Goal 6. edu.osu.cs362.DemoClass.<init>()V: Line 18
   * Goal 7. edu.osu.cs362.DemoClass.overload(C)V: Line 93
   * Goal 8. edu.osu.cs362.DemoClass.overload(C)V: Line 94
   * Goal 9. [METHOD] edu.osu.cs362.DemoClass.<init>()V
   * Goal 10. [METHOD] edu.osu.cs362.DemoClass.overload(C)V
   * Goal 11. [METHODNOEX] edu.osu.cs362.DemoClass.<init>()V
   * Goal 12. [METHODNOEX] edu.osu.cs362.DemoClass.overload(C)V
   * Goal 13. Weak Mutation 0: edu.osu.cs362.DemoClass.<init>()V:17 - ReplaceConstant - 0 -> 1
   * Goal 14. Weak Mutation 33: edu.osu.cs362.DemoClass.overload(C)V:93 - ReplaceConstant - char -> 
   */

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DemoClass demoClass0 = new DemoClass();
      demoClass0.overload(')');
  }
  
  //Test case number: 2
  /*
   * 16 covered goals:
   * Goal 1. edu.osu.cs362.DemoClass.overload(I)V: root-Branch
   * Goal 2. edu.osu.cs362.DemoClass.<init>(I)V: root-Branch
   * Goal 3. Branch edu.osu.cs362.DemoClass.<init>(I)V: root-Branch in context: edu.osu.cs362.DemoClass:<init>(I)V
   * Goal 4. Branch edu.osu.cs362.DemoClass.overload(I)V: root-Branch in context: edu.osu.cs362.DemoClass:overload(I)V
   * Goal 5. edu.osu.cs362.DemoClass.<init>(I)V: Line 25
   * Goal 6. edu.osu.cs362.DemoClass.<init>(I)V: Line 26
   * Goal 7. edu.osu.cs362.DemoClass.overload(I)V: Line 81
   * Goal 8. edu.osu.cs362.DemoClass.overload(I)V: Line 82
   * Goal 9. [METHOD] edu.osu.cs362.DemoClass.<init>(I)V
   * Goal 10. [METHOD] edu.osu.cs362.DemoClass.overload(I)V
   * Goal 11. [METHODNOEX] edu.osu.cs362.DemoClass.<init>(I)V
   * Goal 12. [METHODNOEX] edu.osu.cs362.DemoClass.overload(I)V
   * Goal 13. Weak Mutation 1: edu.osu.cs362.DemoClass.<init>(I)V:25 - InsertUnaryOp Negation of x
   * Goal 14. Weak Mutation 2: edu.osu.cs362.DemoClass.<init>(I)V:25 - InsertUnaryOp IINC 1 x
   * Goal 15. Weak Mutation 3: edu.osu.cs362.DemoClass.<init>(I)V:25 - InsertUnaryOp IINC -1 x
   * Goal 16. Weak Mutation 29: edu.osu.cs362.DemoClass.overload(I)V:81 - ReplaceConstant - int -> 
   */

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DemoClass demoClass0 = new DemoClass(49);
      demoClass0.overload(0);
  }

  //Test case number: 3
  /*
   * 14 covered goals:
   * Goal 1. edu.osu.cs362.DemoClass.<init>()V: root-Branch
   * Goal 2. edu.osu.cs362.DemoClass.overload(Z)V: root-Branch
   * Goal 3. Branch edu.osu.cs362.DemoClass.overload(Z)V: root-Branch in context: edu.osu.cs362.DemoClass:overload(Z)V
   * Goal 4. Branch edu.osu.cs362.DemoClass.<init>()V: root-Branch in context: edu.osu.cs362.DemoClass:<init>()V
   * Goal 5. edu.osu.cs362.DemoClass.<init>()V: Line 17
   * Goal 6. edu.osu.cs362.DemoClass.<init>()V: Line 18
   * Goal 7. edu.osu.cs362.DemoClass.overload(Z)V: Line 96
   * Goal 8. edu.osu.cs362.DemoClass.overload(Z)V: Line 97
   * Goal 9. [METHOD] edu.osu.cs362.DemoClass.<init>()V
   * Goal 10. [METHOD] edu.osu.cs362.DemoClass.overload(Z)V
   * Goal 11. [METHODNOEX] edu.osu.cs362.DemoClass.<init>()V
   * Goal 12. [METHODNOEX] edu.osu.cs362.DemoClass.overload(Z)V
   * Goal 13. Weak Mutation 0: edu.osu.cs362.DemoClass.<init>()V:17 - ReplaceConstant - 0 -> 1
   * Goal 14. Weak Mutation 34: edu.osu.cs362.DemoClass.overload(Z)V:96 - ReplaceConstant - boolean -> 
   */

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DemoClass demoClass0 = new DemoClass();
      demoClass0.overload(true);
  }

  //Test case number: 4
  /*
   * 14 covered goals:
   * Goal 1. edu.osu.cs362.DemoClass.overload(B)V: root-Branch
   * Goal 2. edu.osu.cs362.DemoClass.<init>()V: root-Branch
   * Goal 3. Branch edu.osu.cs362.DemoClass.overload(B)V: root-Branch in context: edu.osu.cs362.DemoClass:overload(B)V
   * Goal 4. Branch edu.osu.cs362.DemoClass.<init>()V: root-Branch in context: edu.osu.cs362.DemoClass:<init>()V
   * Goal 5. edu.osu.cs362.DemoClass.<init>()V: Line 17
   * Goal 6. edu.osu.cs362.DemoClass.<init>()V: Line 18
   * Goal 7. edu.osu.cs362.DemoClass.overload(B)V: Line 75
   * Goal 8. edu.osu.cs362.DemoClass.overload(B)V: Line 76
   * Goal 9. [METHOD] edu.osu.cs362.DemoClass.<init>()V
   * Goal 10. [METHOD] edu.osu.cs362.DemoClass.overload(B)V
   * Goal 11. [METHODNOEX] edu.osu.cs362.DemoClass.<init>()V
   * Goal 12. [METHODNOEX] edu.osu.cs362.DemoClass.overload(B)V
   * Goal 13. Weak Mutation 0: edu.osu.cs362.DemoClass.<init>()V:17 - ReplaceConstant - 0 -> 1
   * Goal 14. Weak Mutation 27: edu.osu.cs362.DemoClass.overload(B)V:75 - ReplaceConstant - byte -> 
   */

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DemoClass demoClass0 = new DemoClass();
      demoClass0.overload((byte)0);
  }

  //Test case number: 5
  /*
   * 16 covered goals:
   * Goal 1. edu.osu.cs362.DemoClass.<init>(I)V: root-Branch
   * Goal 2. edu.osu.cs362.DemoClass.overload(D)V: root-Branch
   * Goal 3. Branch edu.osu.cs362.DemoClass.<init>(I)V: root-Branch in context: edu.osu.cs362.DemoClass:<init>(I)V
   * Goal 4. Branch edu.osu.cs362.DemoClass.overload(D)V: root-Branch in context: edu.osu.cs362.DemoClass:overload(D)V
   * Goal 5. edu.osu.cs362.DemoClass.<init>(I)V: Line 25
   * Goal 6. edu.osu.cs362.DemoClass.<init>(I)V: Line 26
   * Goal 7. edu.osu.cs362.DemoClass.overload(D)V: Line 90
   * Goal 8. edu.osu.cs362.DemoClass.overload(D)V: Line 91
   * Goal 9. [METHOD] edu.osu.cs362.DemoClass.<init>(I)V
   * Goal 10. [METHOD] edu.osu.cs362.DemoClass.overload(D)V
   * Goal 11. [METHODNOEX] edu.osu.cs362.DemoClass.<init>(I)V
   * Goal 12. [METHODNOEX] edu.osu.cs362.DemoClass.overload(D)V
   * Goal 13. Weak Mutation 1: edu.osu.cs362.DemoClass.<init>(I)V:25 - InsertUnaryOp Negation of x
   * Goal 14. Weak Mutation 2: edu.osu.cs362.DemoClass.<init>(I)V:25 - InsertUnaryOp IINC 1 x
   * Goal 15. Weak Mutation 3: edu.osu.cs362.DemoClass.<init>(I)V:25 - InsertUnaryOp IINC -1 x
   * Goal 16. Weak Mutation 32: edu.osu.cs362.DemoClass.overload(D)V:90 - ReplaceConstant - double -> 
   */

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DemoClass demoClass0 = new DemoClass(49);
      demoClass0.overload(1.0);
  }

  //Test case number: 6
  /*
   * 14 covered goals:
   * Goal 1. edu.osu.cs362.DemoClass.overload(S)V: root-Branch
   * Goal 2. edu.osu.cs362.DemoClass.<init>()V: root-Branch
   * Goal 3. Branch edu.osu.cs362.DemoClass.overload(S)V: root-Branch in context: edu.osu.cs362.DemoClass:overload(S)V
   * Goal 4. Branch edu.osu.cs362.DemoClass.<init>()V: root-Branch in context: edu.osu.cs362.DemoClass:<init>()V
   * Goal 5. edu.osu.cs362.DemoClass.<init>()V: Line 17
   * Goal 6. edu.osu.cs362.DemoClass.<init>()V: Line 18
   * Goal 7. edu.osu.cs362.DemoClass.overload(S)V: Line 78
   * Goal 8. edu.osu.cs362.DemoClass.overload(S)V: Line 79
   * Goal 9. [METHOD] edu.osu.cs362.DemoClass.<init>()V
   * Goal 10. [METHOD] edu.osu.cs362.DemoClass.overload(S)V
   * Goal 11. [METHODNOEX] edu.osu.cs362.DemoClass.<init>()V
   * Goal 12. [METHODNOEX] edu.osu.cs362.DemoClass.overload(S)V
   * Goal 13. Weak Mutation 0: edu.osu.cs362.DemoClass.<init>()V:17 - ReplaceConstant - 0 -> 1
   * Goal 14. Weak Mutation 28: edu.osu.cs362.DemoClass.overload(S)V:78 - ReplaceConstant - short -> 
   */

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DemoClass demoClass0 = new DemoClass();
      demoClass0.overload((short)0);
  }

  //Test case number: 7
  /*
   * 16 covered goals:
   * Goal 1. edu.osu.cs362.DemoClass.<init>(I)V: root-Branch
   * Goal 2. edu.osu.cs362.DemoClass.overload(F)V: root-Branch
   * Goal 3. Branch edu.osu.cs362.DemoClass.<init>(I)V: root-Branch in context: edu.osu.cs362.DemoClass:<init>(I)V
   * Goal 4. Branch edu.osu.cs362.DemoClass.overload(F)V: root-Branch in context: edu.osu.cs362.DemoClass:overload(F)V
   * Goal 5. edu.osu.cs362.DemoClass.<init>(I)V: Line 25
   * Goal 6. edu.osu.cs362.DemoClass.<init>(I)V: Line 26
   * Goal 7. edu.osu.cs362.DemoClass.overload(F)V: Line 87
   * Goal 8. edu.osu.cs362.DemoClass.overload(F)V: Line 88
   * Goal 9. [METHOD] edu.osu.cs362.DemoClass.<init>(I)V
   * Goal 10. [METHOD] edu.osu.cs362.DemoClass.overload(F)V
   * Goal 11. [METHODNOEX] edu.osu.cs362.DemoClass.<init>(I)V
   * Goal 12. [METHODNOEX] edu.osu.cs362.DemoClass.overload(F)V
   * Goal 13. Weak Mutation 1: edu.osu.cs362.DemoClass.<init>(I)V:25 - InsertUnaryOp Negation of x
   * Goal 14. Weak Mutation 2: edu.osu.cs362.DemoClass.<init>(I)V:25 - InsertUnaryOp IINC 1 x
   * Goal 15. Weak Mutation 3: edu.osu.cs362.DemoClass.<init>(I)V:25 - InsertUnaryOp IINC -1 x
   * Goal 16. Weak Mutation 31: edu.osu.cs362.DemoClass.overload(F)V:87 - ReplaceConstant - float -> 
   */

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DemoClass demoClass0 = new DemoClass(49);
      demoClass0.overload((float) 49);
  }

  //Test case number: 8
  /*
   * 72 covered goals:
   * Goal 1. edu.osu.cs362.DemoClass.overload(S)V: root-Branch
   * Goal 2. edu.osu.cs362.DemoClass.overload(J)V: root-Branch
   * Goal 3. edu.osu.cs362.DemoClass.overload(I)V: root-Branch
   * Goal 4. edu.osu.cs362.DemoClass.overload(F)V: root-Branch
   * Goal 5. edu.osu.cs362.DemoClass.overload(D)V: root-Branch
   * Goal 6. edu.osu.cs362.DemoClass.overload(B)V: root-Branch
   * Goal 7. edu.osu.cs362.DemoClass.overload(C)V: root-Branch
   * Goal 8. edu.osu.cs362.DemoClass.<init>()V: root-Branch
   * Goal 9. edu.osu.cs362.DemoClass.overloadTester()V: root-Branch
   * Goal 10. edu.osu.cs362.DemoClass.overload(Z)V: root-Branch
   * Goal 11. Branch edu.osu.cs362.DemoClass.overloadTester()V: root-Branch in context: edu.osu.cs362.DemoClass:overloadTester()V
   * Goal 12. Branch edu.osu.cs362.DemoClass.<init>()V: root-Branch in context: edu.osu.cs362.DemoClass:<init>()V
   * Goal 13. edu.osu.cs362.DemoClass.<init>()V: Line 17
   * Goal 14. edu.osu.cs362.DemoClass.<init>()V: Line 18
   * Goal 15. edu.osu.cs362.DemoClass.overload(B)V: Line 75
   * Goal 16. edu.osu.cs362.DemoClass.overload(B)V: Line 76
   * Goal 17. edu.osu.cs362.DemoClass.overload(C)V: Line 93
   * Goal 18. edu.osu.cs362.DemoClass.overload(C)V: Line 94
   * Goal 19. edu.osu.cs362.DemoClass.overload(D)V: Line 90
   * Goal 20. edu.osu.cs362.DemoClass.overload(D)V: Line 91
   * Goal 21. edu.osu.cs362.DemoClass.overload(F)V: Line 87
   * Goal 22. edu.osu.cs362.DemoClass.overload(F)V: Line 88
   * Goal 23. edu.osu.cs362.DemoClass.overload(I)V: Line 81
   * Goal 24. edu.osu.cs362.DemoClass.overload(I)V: Line 82
   * Goal 25. edu.osu.cs362.DemoClass.overload(J)V: Line 84
   * Goal 26. edu.osu.cs362.DemoClass.overload(J)V: Line 85
   * Goal 27. edu.osu.cs362.DemoClass.overload(S)V: Line 78
   * Goal 28. edu.osu.cs362.DemoClass.overload(S)V: Line 79
   * Goal 29. edu.osu.cs362.DemoClass.overload(Z)V: Line 96
   * Goal 30. edu.osu.cs362.DemoClass.overload(Z)V: Line 97
   * Goal 31. edu.osu.cs362.DemoClass.overloadTester()V: Line 62
   * Goal 32. edu.osu.cs362.DemoClass.overloadTester()V: Line 64
   * Goal 33. edu.osu.cs362.DemoClass.overloadTester()V: Line 65
   * Goal 34. edu.osu.cs362.DemoClass.overloadTester()V: Line 66
   * Goal 35. edu.osu.cs362.DemoClass.overloadTester()V: Line 67
   * Goal 36. edu.osu.cs362.DemoClass.overloadTester()V: Line 68
   * Goal 37. edu.osu.cs362.DemoClass.overloadTester()V: Line 69
   * Goal 38. edu.osu.cs362.DemoClass.overloadTester()V: Line 70
   * Goal 39. edu.osu.cs362.DemoClass.overloadTester()V: Line 71
   * Goal 40. edu.osu.cs362.DemoClass.overloadTester()V: Line 72
   * Goal 41. [METHOD] edu.osu.cs362.DemoClass.<init>()V
   * Goal 42. [METHOD] edu.osu.cs362.DemoClass.overloadTester()V
   * Goal 43. [METHODNOEX] edu.osu.cs362.DemoClass.<init>()V
   * Goal 44. [METHODNOEX] edu.osu.cs362.DemoClass.overloadTester()V
   * Goal 45. Weak Mutation 0: edu.osu.cs362.DemoClass.<init>()V:17 - ReplaceConstant - 0 -> 1
   * Goal 46. Weak Mutation 8: edu.osu.cs362.DemoClass.overloadTester()V:62 - ReplaceConstant - overloadTester:
 -> 
   * Goal 47. Weak Mutation 9: edu.osu.cs362.DemoClass.overloadTester()V:64 - ReplaceConstant - 1 -> 0
   * Goal 48. Weak Mutation 10: edu.osu.cs362.DemoClass.overloadTester()V:65 - ReplaceConstant - 1 -> 0
   * Goal 49. Weak Mutation 11: edu.osu.cs362.DemoClass.overloadTester()V:66 - ReplaceConstant - 1 -> 0
   * Goal 50. Weak Mutation 12: edu.osu.cs362.DemoClass.overloadTester()V:67 - ReplaceConstant - 1 -> 0
   * Goal 51. Weak Mutation 13: edu.osu.cs362.DemoClass.overloadTester()V:67 - ReplaceConstant - 1 -> -1
   * Goal 52. Weak Mutation 14: edu.osu.cs362.DemoClass.overloadTester()V:67 - ReplaceConstant - 1 -> 2
   * Goal 53. Weak Mutation 15: edu.osu.cs362.DemoClass.overloadTester()V:68 - ReplaceConstant - 1.0 -> 0.0
   * Goal 54. Weak Mutation 16: edu.osu.cs362.DemoClass.overloadTester()V:68 - ReplaceConstant - 1.0 -> -1.0
   * Goal 55. Weak Mutation 17: edu.osu.cs362.DemoClass.overloadTester()V:68 - ReplaceConstant - 1.0 -> 2.0
   * Goal 56. Weak Mutation 18: edu.osu.cs362.DemoClass.overloadTester()V:69 - ReplaceConstant - 1.0 -> 0.0
   * Goal 57. Weak Mutation 19: edu.osu.cs362.DemoClass.overloadTester()V:69 - ReplaceConstant - 1.0 -> -1.0
   * Goal 58. Weak Mutation 20: edu.osu.cs362.DemoClass.overloadTester()V:69 - ReplaceConstant - 1.0 -> 2.0
   * Goal 59. Weak Mutation 21: edu.osu.cs362.DemoClass.overloadTester()V:70 - ReplaceConstant - 49 -> 0
   * Goal 60. Weak Mutation 22: edu.osu.cs362.DemoClass.overloadTester()V:70 - ReplaceConstant - 49 -> 1
   * Goal 61. Weak Mutation 23: edu.osu.cs362.DemoClass.overloadTester()V:70 - ReplaceConstant - 49 -> -1
   * Goal 62. Weak Mutation 24: edu.osu.cs362.DemoClass.overloadTester()V:70 - ReplaceConstant - 49 -> 48
   * Goal 63. Weak Mutation 25: edu.osu.cs362.DemoClass.overloadTester()V:70 - ReplaceConstant - 49 -> 50
   * Goal 64. Weak Mutation 26: edu.osu.cs362.DemoClass.overloadTester()V:71 - ReplaceConstant - 1 -> 0
   * Goal 65. Weak Mutation 27: edu.osu.cs362.DemoClass.overload(B)V:75 - ReplaceConstant - byte -> 
   * Goal 66. Weak Mutation 28: edu.osu.cs362.DemoClass.overload(S)V:78 - ReplaceConstant - short -> 
   * Goal 67. Weak Mutation 29: edu.osu.cs362.DemoClass.overload(I)V:81 - ReplaceConstant - int -> 
   * Goal 68. Weak Mutation 30: edu.osu.cs362.DemoClass.overload(J)V:84 - ReplaceConstant - long -> 
   * Goal 69. Weak Mutation 31: edu.osu.cs362.DemoClass.overload(F)V:87 - ReplaceConstant - float -> 
   * Goal 70. Weak Mutation 32: edu.osu.cs362.DemoClass.overload(D)V:90 - ReplaceConstant - double -> 
   * Goal 71. Weak Mutation 33: edu.osu.cs362.DemoClass.overload(C)V:93 - ReplaceConstant - char -> 
   * Goal 72. Weak Mutation 34: edu.osu.cs362.DemoClass.overload(Z)V:96 - ReplaceConstant - boolean -> 
   */

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DemoClass demoClass0 = new DemoClass();
      demoClass0.overloadTester();
  }

  //Test case number: 9
  /*
   * 5 covered goals:
   * Goal 1. edu.osu.cs362.DemoClass.s1()V: root-Branch
   * Goal 2. Branch edu.osu.cs362.DemoClass.s1()V: root-Branch in context: edu.osu.cs362.DemoClass:s1()V
   * Goal 3. edu.osu.cs362.DemoClass.s1()V: Line 36
   * Goal 4. [METHOD] edu.osu.cs362.DemoClass.s1()V
   * Goal 5. [METHODNOEX] edu.osu.cs362.DemoClass.s1()V
   */

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DemoClass.s1();
  }

  //Test case number: 10
  /*
   * 12 covered goals:
   * Goal 1. edu.osu.cs362.DemoClass.i1()V: root-Branch
   * Goal 2. edu.osu.cs362.DemoClass.<init>()V: root-Branch
   * Goal 3. Branch edu.osu.cs362.DemoClass.i1()V: root-Branch in context: edu.osu.cs362.DemoClass:i1()V
   * Goal 4. Branch edu.osu.cs362.DemoClass.<init>()V: root-Branch in context: edu.osu.cs362.DemoClass:<init>()V
   * Goal 5. edu.osu.cs362.DemoClass.<init>()V: Line 17
   * Goal 6. edu.osu.cs362.DemoClass.<init>()V: Line 18
   * Goal 7. edu.osu.cs362.DemoClass.i1()V: Line 40
   * Goal 8. [METHOD] edu.osu.cs362.DemoClass.<init>()V
   * Goal 9. [METHOD] edu.osu.cs362.DemoClass.i1()V
   * Goal 10. [METHODNOEX] edu.osu.cs362.DemoClass.<init>()V
   * Goal 11. [METHODNOEX] edu.osu.cs362.DemoClass.i1()V
   * Goal 12. Weak Mutation 0: edu.osu.cs362.DemoClass.<init>()V:17 - ReplaceConstant - 0 -> 1
   */

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DemoClass demoClass0 = new DemoClass();
      demoClass0.i1();
  }

  //Test case number: 11
  /*
   * 14 covered goals:
   * Goal 1. edu.osu.cs362.DemoClass.overload(J)V: root-Branch
   * Goal 2. edu.osu.cs362.DemoClass.<init>()V: root-Branch
   * Goal 3. Branch edu.osu.cs362.DemoClass.overload(J)V: root-Branch in context: edu.osu.cs362.DemoClass:overload(J)V
   * Goal 4. Branch edu.osu.cs362.DemoClass.<init>()V: root-Branch in context: edu.osu.cs362.DemoClass:<init>()V
   * Goal 5. edu.osu.cs362.DemoClass.<init>()V: Line 17
   * Goal 6. edu.osu.cs362.DemoClass.<init>()V: Line 18
   * Goal 7. edu.osu.cs362.DemoClass.overload(J)V: Line 84
   * Goal 8. edu.osu.cs362.DemoClass.overload(J)V: Line 85
   * Goal 9. [METHOD] edu.osu.cs362.DemoClass.<init>()V
   * Goal 10. [METHOD] edu.osu.cs362.DemoClass.overload(J)V
   * Goal 11. [METHODNOEX] edu.osu.cs362.DemoClass.<init>()V
   * Goal 12. [METHODNOEX] edu.osu.cs362.DemoClass.overload(J)V
   * Goal 13. Weak Mutation 0: edu.osu.cs362.DemoClass.<init>()V:17 - ReplaceConstant - 0 -> 1
   * Goal 14. Weak Mutation 30: edu.osu.cs362.DemoClass.overload(J)V:84 - ReplaceConstant - long -> 
   */

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DemoClass demoClass0 = new DemoClass();
      demoClass0.overload((-1L));
  }

  //Test case number: 12
  /*
   * 8 covered goals:
   * Goal 1. edu.osu.cs362.DemoClass.s2()V: root-Branch
   * Goal 2. edu.osu.cs362.DemoClass.s1()V: root-Branch
   * Goal 3. Branch edu.osu.cs362.DemoClass.s2()V: root-Branch in context: edu.osu.cs362.DemoClass:s2()V
   * Goal 4. edu.osu.cs362.DemoClass.s1()V: Line 36
   * Goal 5. edu.osu.cs362.DemoClass.s2()V: Line 47
   * Goal 6. edu.osu.cs362.DemoClass.s2()V: Line 48
   * Goal 7. [METHOD] edu.osu.cs362.DemoClass.s2()V
   * Goal 8. [METHODNOEX] edu.osu.cs362.DemoClass.s2()V
   */

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DemoClass.s2();
  }

  //Test case number: 13
  /*
   * 17 covered goals:
   * Goal 1. edu.osu.cs362.DemoClass.<init>()V: root-Branch
   * Goal 2. edu.osu.cs362.DemoClass.<init>(Ledu/osu/cs362/DemoClass;)V: root-Branch
   * Goal 3. Branch edu.osu.cs362.DemoClass.<init>()V: root-Branch in context: edu.osu.cs362.DemoClass:<init>()V
   * Goal 4. Branch edu.osu.cs362.DemoClass.<init>(Ledu/osu/cs362/DemoClass;)V: root-Branch in context: edu.osu.cs362.DemoClass:<init>(Ledu/osu/cs362/DemoClass;)V
   * Goal 5. edu.osu.cs362.DemoClass.<init>()V: Line 17
   * Goal 6. edu.osu.cs362.DemoClass.<init>()V: Line 18
   * Goal 7. edu.osu.cs362.DemoClass.<init>(Ledu/osu/cs362/DemoClass;)V: Line 31
   * Goal 8. edu.osu.cs362.DemoClass.<init>(Ledu/osu/cs362/DemoClass;)V: Line 32
   * Goal 9. [METHOD] edu.osu.cs362.DemoClass.<init>()V
   * Goal 10. [METHOD] edu.osu.cs362.DemoClass.<init>(Ledu/osu/cs362/DemoClass;)V
   * Goal 11. [METHODNOEX] edu.osu.cs362.DemoClass.<init>()V
   * Goal 12. [METHODNOEX] edu.osu.cs362.DemoClass.<init>(Ledu/osu/cs362/DemoClass;)V
   * Goal 13. Weak Mutation 0: edu.osu.cs362.DemoClass.<init>()V:17 - ReplaceConstant - 0 -> 1
   * Goal 14. Weak Mutation 4: edu.osu.cs362.DemoClass.<init>(Ledu/osu/cs362/DemoClass;)V:31 - ReplaceVariable otherDemo -> this
   * Goal 15. Weak Mutation 5: edu.osu.cs362.DemoClass.<init>(Ledu/osu/cs362/DemoClass;)V:31 - InsertUnaryOp Negation
   * Goal 16. Weak Mutation 6: edu.osu.cs362.DemoClass.<init>(Ledu/osu/cs362/DemoClass;)V:31 - InsertUnaryOp +1
   * Goal 17. Weak Mutation 7: edu.osu.cs362.DemoClass.<init>(Ledu/osu/cs362/DemoClass;)V:31 - InsertUnaryOp -1
   */

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DemoClass demoClass0 = new DemoClass();
      DemoClass demoClass1 = new DemoClass(demoClass0);
      assertFalse(demoClass1.equals((Object)demoClass0));
  }

  //Test case number: 14
  /*
   * 20 covered goals:
   * Goal 1. edu.osu.cs362.DemoClass.<init>(I)V: root-Branch
   * Goal 2. edu.osu.cs362.DemoClass.i2()V: root-Branch
   * Goal 3. edu.osu.cs362.DemoClass.i1()V: root-Branch
   * Goal 4. edu.osu.cs362.DemoClass.s1()V: root-Branch
   * Goal 5. Branch edu.osu.cs362.DemoClass.<init>(I)V: root-Branch in context: edu.osu.cs362.DemoClass:<init>(I)V
   * Goal 6. Branch edu.osu.cs362.DemoClass.i2()V: root-Branch in context: edu.osu.cs362.DemoClass:i2()V
   * Goal 7. edu.osu.cs362.DemoClass.<init>(I)V: Line 25
   * Goal 8. edu.osu.cs362.DemoClass.<init>(I)V: Line 26
   * Goal 9. edu.osu.cs362.DemoClass.i1()V: Line 40
   * Goal 10. edu.osu.cs362.DemoClass.i2()V: Line 54
   * Goal 11. edu.osu.cs362.DemoClass.i2()V: Line 55
   * Goal 12. edu.osu.cs362.DemoClass.i2()V: Line 56
   * Goal 13. edu.osu.cs362.DemoClass.s1()V: Line 36
   * Goal 14. [METHOD] edu.osu.cs362.DemoClass.<init>(I)V
   * Goal 15. [METHOD] edu.osu.cs362.DemoClass.i2()V
   * Goal 16. [METHODNOEX] edu.osu.cs362.DemoClass.<init>(I)V
   * Goal 17. [METHODNOEX] edu.osu.cs362.DemoClass.i2()V
   * Goal 18. Weak Mutation 1: edu.osu.cs362.DemoClass.<init>(I)V:25 - InsertUnaryOp Negation of x
   * Goal 19. Weak Mutation 2: edu.osu.cs362.DemoClass.<init>(I)V:25 - InsertUnaryOp IINC 1 x
   * Goal 20. Weak Mutation 3: edu.osu.cs362.DemoClass.<init>(I)V:25 - InsertUnaryOp IINC -1 x
   */

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DemoClass demoClass0 = new DemoClass(49);
      demoClass0.i2();
  }

  //Test case number: 15
  /*
   * 73 covered goals:
   * Goal 1. edu.osu.cs362.DemoClass.overload(S)V: root-Branch
   * Goal 2. edu.osu.cs362.DemoClass.overload(J)V: root-Branch
   * Goal 3. edu.osu.cs362.DemoClass.overload(I)V: root-Branch
   * Goal 4. edu.osu.cs362.DemoClass.overload(F)V: root-Branch
   * Goal 5. edu.osu.cs362.DemoClass.overload(D)V: root-Branch
   * Goal 6. edu.osu.cs362.DemoClass.overload(B)V: root-Branch
   * Goal 7. edu.osu.cs362.DemoClass.overload(C)V: root-Branch
   * Goal 8. edu.osu.cs362.DemoClass.<init>()V: root-Branch
   * Goal 9. edu.osu.cs362.DemoClass.overloadTester()V: root-Branch
   * Goal 10. edu.osu.cs362.DemoClass.overload(Z)V: root-Branch
   * Goal 11. edu.osu.cs362.DemoClass.main([Ljava/lang/String;)V: root-Branch
   * Goal 12. Branch edu.osu.cs362.DemoClass.main([Ljava/lang/String;)V: root-Branch in context: edu.osu.cs362.DemoClass:main([Ljava/lang/String;)V
   * Goal 13. edu.osu.cs362.DemoClass.<init>()V: Line 17
   * Goal 14. edu.osu.cs362.DemoClass.<init>()V: Line 18
   * Goal 15. edu.osu.cs362.DemoClass.main([Ljava/lang/String;)V: Line 100
   * Goal 16. edu.osu.cs362.DemoClass.main([Ljava/lang/String;)V: Line 101
   * Goal 17. edu.osu.cs362.DemoClass.main([Ljava/lang/String;)V: Line 102
   * Goal 18. edu.osu.cs362.DemoClass.overload(B)V: Line 75
   * Goal 19. edu.osu.cs362.DemoClass.overload(B)V: Line 76
   * Goal 20. edu.osu.cs362.DemoClass.overload(C)V: Line 93
   * Goal 21. edu.osu.cs362.DemoClass.overload(C)V: Line 94
   * Goal 22. edu.osu.cs362.DemoClass.overload(D)V: Line 90
   * Goal 23. edu.osu.cs362.DemoClass.overload(D)V: Line 91
   * Goal 24. edu.osu.cs362.DemoClass.overload(F)V: Line 87
   * Goal 25. edu.osu.cs362.DemoClass.overload(F)V: Line 88
   * Goal 26. edu.osu.cs362.DemoClass.overload(I)V: Line 81
   * Goal 27. edu.osu.cs362.DemoClass.overload(I)V: Line 82
   * Goal 28. edu.osu.cs362.DemoClass.overload(J)V: Line 84
   * Goal 29. edu.osu.cs362.DemoClass.overload(J)V: Line 85
   * Goal 30. edu.osu.cs362.DemoClass.overload(S)V: Line 78
   * Goal 31. edu.osu.cs362.DemoClass.overload(S)V: Line 79
   * Goal 32. edu.osu.cs362.DemoClass.overload(Z)V: Line 96
   * Goal 33. edu.osu.cs362.DemoClass.overload(Z)V: Line 97
   * Goal 34. edu.osu.cs362.DemoClass.overloadTester()V: Line 62
   * Goal 35. edu.osu.cs362.DemoClass.overloadTester()V: Line 64
   * Goal 36. edu.osu.cs362.DemoClass.overloadTester()V: Line 65
   * Goal 37. edu.osu.cs362.DemoClass.overloadTester()V: Line 66
   * Goal 38. edu.osu.cs362.DemoClass.overloadTester()V: Line 67
   * Goal 39. edu.osu.cs362.DemoClass.overloadTester()V: Line 68
   * Goal 40. edu.osu.cs362.DemoClass.overloadTester()V: Line 69
   * Goal 41. edu.osu.cs362.DemoClass.overloadTester()V: Line 70
   * Goal 42. edu.osu.cs362.DemoClass.overloadTester()V: Line 71
   * Goal 43. edu.osu.cs362.DemoClass.overloadTester()V: Line 72
   * Goal 44. [METHOD] edu.osu.cs362.DemoClass.main([Ljava/lang/String;)V
   * Goal 45. [METHODNOEX] edu.osu.cs362.DemoClass.main([Ljava/lang/String;)V
   * Goal 46. Weak Mutation 0: edu.osu.cs362.DemoClass.<init>()V:17 - ReplaceConstant - 0 -> 1
   * Goal 47. Weak Mutation 8: edu.osu.cs362.DemoClass.overloadTester()V:62 - ReplaceConstant - overloadTester:
 -> 
   * Goal 48. Weak Mutation 9: edu.osu.cs362.DemoClass.overloadTester()V:64 - ReplaceConstant - 1 -> 0
   * Goal 49. Weak Mutation 10: edu.osu.cs362.DemoClass.overloadTester()V:65 - ReplaceConstant - 1 -> 0
   * Goal 50. Weak Mutation 11: edu.osu.cs362.DemoClass.overloadTester()V:66 - ReplaceConstant - 1 -> 0
   * Goal 51. Weak Mutation 12: edu.osu.cs362.DemoClass.overloadTester()V:67 - ReplaceConstant - 1 -> 0
   * Goal 52. Weak Mutation 13: edu.osu.cs362.DemoClass.overloadTester()V:67 - ReplaceConstant - 1 -> -1
   * Goal 53. Weak Mutation 14: edu.osu.cs362.DemoClass.overloadTester()V:67 - ReplaceConstant - 1 -> 2
   * Goal 54. Weak Mutation 15: edu.osu.cs362.DemoClass.overloadTester()V:68 - ReplaceConstant - 1.0 -> 0.0
   * Goal 55. Weak Mutation 16: edu.osu.cs362.DemoClass.overloadTester()V:68 - ReplaceConstant - 1.0 -> -1.0
   * Goal 56. Weak Mutation 17: edu.osu.cs362.DemoClass.overloadTester()V:68 - ReplaceConstant - 1.0 -> 2.0
   * Goal 57. Weak Mutation 18: edu.osu.cs362.DemoClass.overloadTester()V:69 - ReplaceConstant - 1.0 -> 0.0
   * Goal 58. Weak Mutation 19: edu.osu.cs362.DemoClass.overloadTester()V:69 - ReplaceConstant - 1.0 -> -1.0
   * Goal 59. Weak Mutation 20: edu.osu.cs362.DemoClass.overloadTester()V:69 - ReplaceConstant - 1.0 -> 2.0
   * Goal 60. Weak Mutation 21: edu.osu.cs362.DemoClass.overloadTester()V:70 - ReplaceConstant - 49 -> 0
   * Goal 61. Weak Mutation 22: edu.osu.cs362.DemoClass.overloadTester()V:70 - ReplaceConstant - 49 -> 1
   * Goal 62. Weak Mutation 23: edu.osu.cs362.DemoClass.overloadTester()V:70 - ReplaceConstant - 49 -> -1
   * Goal 63. Weak Mutation 24: edu.osu.cs362.DemoClass.overloadTester()V:70 - ReplaceConstant - 49 -> 48
   * Goal 64. Weak Mutation 25: edu.osu.cs362.DemoClass.overloadTester()V:70 - ReplaceConstant - 49 -> 50
   * Goal 65. Weak Mutation 26: edu.osu.cs362.DemoClass.overloadTester()V:71 - ReplaceConstant - 1 -> 0
   * Goal 66. Weak Mutation 27: edu.osu.cs362.DemoClass.overload(B)V:75 - ReplaceConstant - byte -> 
   * Goal 67. Weak Mutation 28: edu.osu.cs362.DemoClass.overload(S)V:78 - ReplaceConstant - short -> 
   * Goal 68. Weak Mutation 29: edu.osu.cs362.DemoClass.overload(I)V:81 - ReplaceConstant - int -> 
   * Goal 69. Weak Mutation 30: edu.osu.cs362.DemoClass.overload(J)V:84 - ReplaceConstant - long -> 
   * Goal 70. Weak Mutation 31: edu.osu.cs362.DemoClass.overload(F)V:87 - ReplaceConstant - float -> 
   * Goal 71. Weak Mutation 32: edu.osu.cs362.DemoClass.overload(D)V:90 - ReplaceConstant - double -> 
   * Goal 72. Weak Mutation 33: edu.osu.cs362.DemoClass.overload(C)V:93 - ReplaceConstant - char -> 
   * Goal 73. Weak Mutation 34: edu.osu.cs362.DemoClass.overload(Z)V:96 - ReplaceConstant - boolean -> 
   */

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[6];
      DemoClass.main(stringArray0);
  }
}